<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github fork仓库向主工程提交代码</title>
      <link href="/2022/09/22/github-fork%E4%BB%93%E5%BA%93%E5%90%91%E4%B8%BB%E5%B7%A5%E7%A8%8B%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81/"/>
      <url>/2022/09/22/github-fork%E4%BB%93%E5%BA%93%E5%90%91%E4%B8%BB%E5%B7%A5%E7%A8%8B%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="1-fork并关联本地"><a href="#1-fork并关联本地" class="headerlink" title="1. fork并关联本地"></a>1. fork并关联本地</h2><p>进入我的主页，找到这个仓库</p><p><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220208551.png" alt="image-20220922020848487"></p><p>点击右上角的fork，然后你的主页里就多了一个同样的仓库了，相当于做了一个镜像开了个分支</p><p>然后在本地合适位置（最好别带中文）建立一个同名文件夹（名字不影响，但是为了一致嘛），然后在文件夹中打开git bash(path配置好了的话，powershell也可以)，然后按照如下流程输入（有梯子的话最好打开梯子）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆fork后仓库到本地,yourname为你的github名</span></span><br><span class="line">git <span class="built_in">clone</span> （fork后的url）</span><br></pre></td></tr></table></figure><p>然后你的文件夹下就会出现本项目已有所有文件，然后你就可以在本地仓库的对应文件夹（你的名字）添加你的学习文件了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add到本地暂存区, .是add所有新文件的意思</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># commit到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;first_commit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关联到你的远程仓库</span></span><br><span class="line">git remote add origin your_url</span><br><span class="line"></span><br><span class="line"><span class="comment"># push到你的远程仓库</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220214651.webp" alt="img"></p><p>然后你fork的仓库会出现你的新增文件</p><h2 id="2-关联主工程"><a href="#2-关联主工程" class="headerlink" title="2.关联主工程"></a>2.关联主工程</h2><p>关联主工程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add okex(自定义分支名) (主工程的git url)</span><br><span class="line"><span class="comment"># 查看关联情况</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220224884.png" alt="在这里插入图片描述"></p><p>拉取主工程各分支信息到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch okex(自定义分支名)</span><br></pre></td></tr></table></figure><p><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220224876.png" alt="在这里插入图片描述"></p><p>在本地切换到主分支的某分支（比如develop）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br></pre></td></tr></table></figure><p>在此分支的基础上创建一个自己的分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b michael.w</span><br></pre></td></tr></table></figure><p>开始做代码修改。</p><p>代码commit后向自己的repo push代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p>这里可能报错，请根据报错内容自行纠正</p><p><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220224883.png" alt="在这里插入图片描述"></p><ol><li>从自己的repo中向主工程发起request pull：<br><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220224879.png" alt="在这里插入图片描述"><br>选择要提交的目标分支：<br><img src="https://haoming2003.oss-cn-hangzhou.aliyuncs.com/202209220224980.png" alt="在这里插入图片描述"></li></ol><h3 id="如何将主分支的更新进度同步到我的repo中"><a href="#如何将主分支的更新进度同步到我的repo中" class="headerlink" title="如何将主分支的更新进度同步到我的repo中"></a>如何将主分支的更新进度同步到我的repo中</h3><p>假设主工程的开发分支时main</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切到本地的main分支</span></span><br><span class="line">git checkout main</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将okex的的main分支拉取下来并与本地现在所处分支合并</span></span><br><span class="line">git pull okex main</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推到我的repo</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><hr><p>· 本文参考了<a href="https://blog.csdn.net/michael_wgy_/article/details/104589800">wgy的博客</a>，侵删</p><p>· 由于github默认分支改变，以上master记得改为main</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> github fork 上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github+hexo+butterfly搭建博客</title>
      <link href="/2022/09/21/github-hexo-butterfly%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/09/21/github-hexo-butterfly%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<hr><p>突然想到搭建一个博客玩，其实之前也在csdn上发过一点，但是没坚持下来，太失败了</p><p>希望这次可以坚持下来，下面记录一下搭建过程</p><hr><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li><p>github账号</p></li><li><p>nodejs, npm（版本别太低）</p></li></ol><p>上网搜具体的安装教程，肯定比我写得好</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="创建username-github-io的项目"><a href="#创建username-github-io的项目" class="headerlink" title="创建username.github.io的项目"></a>创建<strong>username.github.io</strong>的项目</h4><p>（记住<strong>username</strong>跟你<strong>github</strong>名称同名）</p><p>在合适的地方新建一个文件夹，用来存放自己的博客文件，我的放在<code>D:\blog</code>下</p><p><strong>在该目录下</strong></p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<strong>Hexo</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure><p>可能会有几个报错，忽略</p><p>安装完后用 <strong>hexo -v</strong> 验证是否安装成功</p><h4 id="初始化并生成网页"><a href="#初始化并生成网页" class="headerlink" title="初始化并生成网页"></a><strong>初始化</strong>并生成网页</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">npm install <span class="comment"># 安装必备组件</span></span><br><span class="line"></span><br><span class="line">hexo g <span class="comment"># 生成静态网页</span></span><br><span class="line"></span><br><span class="line">hexo s <span class="comment"># 打开本地服务器,打开http://localhost:4000/,就有效果了</span></span><br></pre></td></tr></table></figure><p><strong>ctrl</strong> + <strong>c</strong>关闭本地服务器</p><h4 id="连接github和本地"><a href="#连接github和本地" class="headerlink" title="连接github和本地"></a>连接github和本地</h4><p>在根目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;HaomingX&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;978545377@qq.com&quot;</span></span><br><span class="line"><span class="comment"># 根据你注册github的信息替换成你自己的</span></span><br></pre></td></tr></table></figure><p>生成密钥SSH key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;978545377@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>打开<a href="http://github.com/">github</a>，点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字任意</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>复制到ssh密匙框中，保存</p><p>输入<code>ssh -T git@github.com</code>，如果说了Hi 用户名!,你就成功了</p><p>打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件</p><p>修改最后一行的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/HaomingX/HaomingX.github.io</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><p>根目录下安装扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文章</span></span><br><span class="line">hexo new post <span class="string">&quot;文章名&quot;</span></span><br></pre></td></tr></table></figure><p>打开<code>D:\blog\source\_posts</code>的目录，可以发现下面多了一个<code>.md</code>文件</p><p>编写完后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line">hexo d <span class="comment"># 上传到github</span></span><br></pre></td></tr></table></figure><p>打开你的<a href="https://github.io/">github.io</a>主页就能看到发布的文章</p><h3 id="butterfly美化"><a href="#butterfly美化" class="headerlink" title="butterfly美化"></a>butterfly美化</h3><p><a href="https://tzy1997.com/articles/hexo1603/">可以跟这个博主的教程走，写得很好</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
